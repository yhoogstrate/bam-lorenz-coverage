#!/usr/bin/env python

import pysam
from tqdm import tqdm


from blc.blc import blc

#bam = '/mnt/galaxian/data/users/youri/ProToCol/drdisco_analysis/bam_hg38/poly-A_G-110/Aligned.sortedByCoord.out.bam'
#pysam.samtools.depth('/home/youri/src/dr-disco.bak/tmp/bla.bam')
bam = '/home/youri/src/dr-disco.bak/tmp/tests/detect-intronic/test_19.fixed.bam'


size_investigated_region = 0

b = blc()
idx_observed, size_investigated_region = b.bam_file_to_idx(bam)

print(idx_observed)


idx_observed = {0: 48129477, 56: 14, 55: 1, 52: 1, 50: 2, 49: 2, 48: 1, 47: 1, 44: 3, 43: 3, 41: 2, 40: 2, 38: 18, 37: 6, 34: 9, 35: 1, 31: 3, 30: 2, 29: 6, 27: 7, 26: 9, 24: 8, 23: 7, 22: 1, 21: 9, 20: 12, 19: 5, 18: 9, 17: 21, 16: 4, 15: 7, 13: 29, 12: 21, 11: 11, 8: 20, 7: 22, 5: 17, 1: 63, 2: 15, 4: 9, 6: 2, 9: 2, 14: 3, 36: 1, 33: 1, 32: 2, 28: 12, 25: 3, 10: 9}
#idx_observed = {0: 48, 56: 14, 55: 1, 52: 1, 50: 2, 49: 2, 48: 1, 47: 1, 44: 3, 43: 3, 41: 2, 40: 2, 38: 18, 37: 6, 34: 9, 35: 1, 31: 3, 30: 2, 29: 6, 27: 7, 26: 9, 24: 8, 23: 7, 22: 1, 21: 9, 20: 12, 19: 5, 18: 9, 17: 21, 16: 4, 15: 7, 13: 29, 12: 21, 11: 11, 8: 20, 7: 22, 5: 17, 1: 63, 2: 15, 4: 9, 6: 2, 9: 2, 14: 3, 36: 1, 33: 1, 32: 2, 28: 12, 25: 3, 10: 9}



#coverage_graph_stats = b.estimate_cumulative_coverage_plot(idx_observed)

"""
idx_observed = {
    56: 14,
    55: 1,
    52: 1,
    50: 2,
    49: 2,
    48: 1,
    47: 1,
    8: 20,

...

    7: 22,
    5: 17,
    1: 63,
    2: 15,
    4: 9,
    6: 2,
    9: 2,
    0: 100,
    }
 """
 
""" 
# coverage 56 komt 14 keer voor
Y = 56 / (sum(keys))
X =  14 / n_bases
"""

lorenz_idx = {}
total_reads = sum(idx_observed)
total_positions = sum(idx_observed.values())
#print(total_reads)
#print(total_positions)

print("frac.genome\tfrac.total.reads")
        
accumulation_reads = 0
accumulation_positions = 0
for depth in sorted(idx_observed, reverse = True):
    positions = idx_observed[depth]
    
    accumulation_reads += depth
    accumulation_positions += positions
    #accumulation += idx_observed[key]
    
    print("%f\t%f" % (accumulation_positions/total_positions,accumulation_reads/total_reads))
    #print("[%i: %ix]   frac genome [%i/%i] = %f\tfrac reads=[%i/%i] = %f" % (depth,positions,positions,total_positions,accumulation_positions/total_positions,accumulation_reads,total_reads,accumulation_reads/total_reads))

