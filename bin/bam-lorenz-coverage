#!/usr/bin/env python

import pysam
from tqdm import tqdm


from blc.blc import blc

#bam = '/mnt/galaxian/data/users/youri/ProToCol/drdisco_analysis/bam_hg38/poly-A_G-110/Aligned.sortedByCoord.out.bam'
#pysam.samtools.depth('/home/youri/src/dr-disco.bak/tmp/bla.bam')
bam = '/home/youri/src/dr-disco.bak/tmp/tests/detect-intronic/test_19.fixed.bam'



#b = blc()
#idx_observed = b.bam_file_to_idx(bam)

#print(idx_observed)


idx_observed = {0: 9, 1: 2, 2: 4, 3: 1}

"""
          =====
      =======
    =====   =====
-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
0 0 1 2 2 2 3 2 1 0 0 0 0 0 0 0

stats table:

       |        Cumu   |  Seq.    Cumu
Depth  | Freq    Freq  | Bases   Bases
--------------------------------------- 
  0    |   9   1+4+2+9 |  0*9      0
  1    |   2    1+4+2  |  1*2     0+2
  2    |   4     1+4   |  2*4    0+2+8
  3    |   1      1    |  1*3   0+2+8+3


cumu_freq = 1+4+2+9 = 16
cumu_bases = 0+2+8+3 = 13
"""

lorenz_idx = {}

previous_depth = None
for depth in sorted(idx_observed, reverse = True):
    frac_of_genome = idx_observed[depth]
    sequenced_bases = idx_observed[depth] * depth
    
    cumu_frac_of_genome = frac_of_genome
    cumulative_sequenced_bases = sequenced_bases
    if previous_depth:
        cumu_frac_of_genome += lorenz_idx[previous_depth][0]
        cumulative_sequenced_bases += lorenz_idx[previous_depth][1]
    lorenz_idx[depth] = [cumu_frac_of_genome, cumulative_sequenced_bases]

    previous_depth = depth

total_covered_positions_of_genome = cumu_frac_of_genome
total_sequenced_bases = cumulative_sequenced_bases

"""
for depth in sorted(idx_observed):
    print(lorenz_idx[depth])

"""

print("X-fraction-sequenced-bases\tY-fraction-genome-covered")
for depth in lorenz_idx:
    """
    The zero statistic is confusing and needs to be disabled.
    """
    if depth > 0:
        print(str(round(1.0 * lorenz_idx[depth][1] / total_sequenced_bases, 4)) + "\t" + str(round(1.0 * lorenz_idx[depth][0] / total_covered_positions_of_genome,4)))

