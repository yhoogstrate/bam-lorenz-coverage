#!/usr/bin/env python

import click
from tqdm import tqdm
import pysam
import sys


import blc
from blc.blc import bamlorenzcoverage


"""
python setup.py install ; bin/bam-lorenz-coverage /home/youri/src/dr-disco.bak/tmp/tests/detect-intronic/test_19.fixed.bam

"""


@click.command()
@click.version_option(blc.__version__ + "\n\n" + blc.__license_notice__ + "\n\nCopyright (C) 2018  " + blc.__author__ + ".\n\nFor more info please visit:\n" + blc.__homepage__)
@click.argument('input_alignment_file', type=click.Path(exists=True))
@click.option('-l','--lorenz-table', help='Output table Lorenz-curve.')
@click.option('-c','--coverage-table', help='Output table Coverage-graph.')
@click.option('-L','--lorenz-svg', help='Output figure Lorenz-curve (SVG).')
@click.option('-C','--coverage-svg', help='Output figure Coverage-graph (SVG).')
def CLI(lorenz_table, coverage_table, lorenz_svg, coverage_svg, input_alignment_file):
    b = bamlorenzcoverage()
    idx_observed = b.bam_file_to_idx(input_alignment_file)

    if lorenz_table or lorenz_svg:
        lorenz_curves = b.estimatea_lorenz_curves(idx_observed)
        
        if lorenz_table:
            if lorenz_table == '-':
                b.export_lorenz_curves(lorenz_curves, sys.stdout)
            else:
                with open(lorenz_table, 'w') as fh:
                    b.export_lorenz_curves(lorenz_curves, fh)



def main():
    CLI()


if __name__ == '__main__':
    main()

